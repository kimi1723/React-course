{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hubi\\\\Documents\\\\GitHub\\\\React-course\\\\sending http req\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dummyMovies = [{\n    id: 1,\n    title: \"Some Dummy Movie\",\n    openingText: \"This is the opening text of the movie\",\n    releaseDate: \"2021-05-18\"\n  }, {\n    id: 2,\n    title: \"Some Dummy Movie 2\",\n    openingText: \"This is the second opening text of the movie\",\n    releaseDate: \"2021-05-19\"\n  }];\n  const [movies, setMovies] = useState([]);\n  const fetchMoviesHandler = () => {\n    const URL = \"https://swapi.dev/api/films\";\n    fetch(URL).then(res => res.json()).then(data => {\n      const transformedMovies = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie_release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","dummyMovies","id","title","openingText","releaseDate","movies","setMovies","fetchMoviesHandler","URL","fetch","then","res","json","data","transformedMovies","results","map","movie","episode_id","opening_crawl","movie_release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hubi/Documents/GitHub/React-course/sending http req/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst dummyMovies = [\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: \"Some Dummy Movie\",\n\t\t\topeningText: \"This is the opening text of the movie\",\n\t\t\treleaseDate: \"2021-05-18\",\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttitle: \"Some Dummy Movie 2\",\n\t\t\topeningText: \"This is the second opening text of the movie\",\n\t\t\treleaseDate: \"2021-05-19\",\n\t\t},\n\t];\n\tconst [movies, setMovies] = useState([]);\n\n\tconst fetchMoviesHandler = () => {\n\t\tconst URL = \"https://swapi.dev/api/films\";\n\t\tfetch(URL)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst transformedMovies = data.results.map((movie) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: movie.episode_id,\n\t\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\t\topeningText: movie.opening_crawl,\n\t\t\t\t\t\treleaseDate: movie_release_date,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetMovies(transformedMovies);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<MoviesList movies={movies} />\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,WAAW,GAAG,CACnB;IACCC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,kBAAkB;IACzBC,WAAW,EAAE,uCAAuC;IACpDC,WAAW,EAAE;EACd,CAAC,EACD;IACCH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,oBAAoB;IAC3BC,WAAW,EAAE,8CAA8C;IAC3DC,WAAW,EAAE;EACd,CAAC,CACD;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;IAChC,MAAMC,GAAG,GAAG,6BAA6B;IACzCC,KAAK,CAACD,GAAG,CAAC,CACRE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACf,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;QACrD,OAAO;UACNhB,EAAE,EAAEgB,KAAK,CAACC,UAAU;UACpBhB,KAAK,EAAEe,KAAK,CAACf,KAAK;UAClBC,WAAW,EAAEc,KAAK,CAACE,aAAa;UAChCf,WAAW,EAAEgB;QACd,CAAC;MACF,CAAC,CAAC;MACFd,SAAS,CAACQ,iBAAiB,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EAED,oBACCjB,OAAA,CAACJ,KAAK,CAAC4B,QAAQ;IAAAC,QAAA,gBACdzB,OAAA;MAAAyB,QAAA,eACCzB,OAAA;QAAQ0B,OAAO,EAAEhB,kBAAmB;QAAAe,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACV9B,OAAA;MAAAyB,QAAA,eACCzB,OAAA,CAACF,UAAU;QAACU,MAAM,EAAEA;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB;AAAC5B,EAAA,CA5CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}