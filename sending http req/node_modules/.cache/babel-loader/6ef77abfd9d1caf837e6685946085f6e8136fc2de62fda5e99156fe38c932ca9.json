{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hubi\\\\Documents\\\\GitHub\\\\React-course\\\\sending http req\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-cdfed-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    // fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const res = await fetch(\"https://react-cdfed-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 16\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","res","method","body","JSON","stringify","headers","console","log","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hubi/Documents/GitHub/React-course/sending http req/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst fetchMoviesHandler = useCallback(async () => {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t\"https://react-cdfed-default-rtdb.firebaseio.com/movies.json\",\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"Something went wrong!\");\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\n\t\t\tconst transformedMovies = data.results.map((movieData) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: movieData.episode_id,\n\t\t\t\t\ttitle: movieData.title,\n\t\t\t\t\topeningText: movieData.opening_crawl,\n\t\t\t\t\treleaseDate: movieData.release_date,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetMovies(transformedMovies);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetIsLoading(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// fetchMoviesHandler();\n\t}, [fetchMoviesHandler]);\n\n\tasync function addMovieHandler(movie) {\n\t\tconst res = await fetch(\n\t\t\t\"https://react-cdfed-default-rtdb.firebaseio.com/movies.json\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify(movie),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst data = await res.json();\n\t\tconsole.log(data);\n\t}\n\n\tlet content = <p>Found no movies.</p>;\n\n\tif (movies.length > 0) {\n\t\tcontent = <MoviesList movies={movies} />;\n\t}\n\n\tif (error) {\n\t\tcontent = <p>{error}</p>;\n\t}\n\n\tif (isLoading) {\n\t\tcontent = <p>Loading...</p>;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<AddMovie onAddMovie={addMovieHandler} />\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>{content}</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}