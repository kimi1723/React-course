{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hubi\\\\Documents\\\\GitHub\\\\React-course\\\\sending http req\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const URL = \"https://swapi.dev/api/films\";\n      const res = await fetch(URL);\n      if (!res.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await res.json();\n      const transformedMovies = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"zuBJAn2dLkBMoQCfa8VUzB2Qvvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","URL","res","fetch","ok","Error","data","json","transformedMovies","results","map","movie","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Hubi/Documents/GitHub/React-course/sending http req/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst fetchMoviesHandler = async () => {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst URL = \"https://swapi.dev/api/films\";\n\t\t\tconst res = await fetch(URL);\n\n\t\t\tif (!res.ok) {\n\t\t\t\tthrow new Error(\"Something went wrong\");\n\t\t\t}\n\n\t\t\tconst data = await res.json();\n\t\t\tconst transformedMovies = data.results.map((movie) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: movie.episode_id,\n\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\topeningText: movie.opening_crawl,\n\t\t\t\t\treleaseDate: movie.release_date,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetMovies(transformedMovies);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetIsLoading(false);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t{!isLoading && <MoviesList movies={movies} />}\n\t\t\t\t{!isLoading && movies.length === 0 && !error && <p>Found no movies</p>}\n\t\t\t\t{isLoading && <p>Loading..</p>}\n\t\t\t\t{!isLoading && error && <p>{error}</p>}\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}