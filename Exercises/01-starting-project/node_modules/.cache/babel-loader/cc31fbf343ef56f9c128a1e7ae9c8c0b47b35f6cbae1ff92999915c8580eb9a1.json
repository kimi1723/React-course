{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hubi\\\\Documents\\\\GitHub\\\\React-course\\\\Exercises\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/UI/Header';\nimport InvestmentForm from './components/InvestmentForm';\nimport InvestmentResultTable from './components/InvestmentResultTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyInvestmentData, setYearlyInvestmentData] = useState([]);\n  let isDataAvailable;\n  const tab = [];\n  const calculateInvestmentHandler = investmentData => {\n    const {\n      yearlyContribution,\n      expectedReturn,\n      duration\n    } = investmentData;\n    let {\n        currentSavings\n      } = investmentData,\n      investedCapital = currentSavings,\n      initialInvestment = currentSavings,\n      totalInterest = 0;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * (expectedReturn / 100);\n      investedCapital += yearlyContribution;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalInterest += yearlyInterest;\n      tab.push({\n        id: Math.random().toString(),\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalInterest: totalInterest,\n        investedCapital: investedCapital,\n        initialInvestment: initialInvestment\n      });\n\n      //   setYearlyInvestmentData((data) => [...data,\n      //     {\n      //       year: i + 1,\n      //       yearlyInterest: yearlyInterest,\n      //       savingsEndOfYear: currentSavings,\n      //       yearlyContribution: yearlyContribution,\n      //       totalInterest: totalInterest,\n      //     }\n      // ]);\n    }\n\n    setYearlyInvestmentData([...tab]);\n  };\n  const formResetHandler = () => {\n    setYearlyInvestmentData([]);\n  };\n  yearlyInvestmentData.length === 0 ? isDataAvailable = false : isDataAvailable = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentForm, {\n      calculateInvestment: calculateInvestmentHandler,\n      resetForm: formResetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isDataAvailable && /*#__PURE__*/_jsxDEV(InvestmentResultTable, {\n      investmentData: yearlyInvestmentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }, this), !isDataAvailable && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YT3gxFDflXpN0Ic55lNzR3Djpac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","InvestmentForm","InvestmentResultTable","jsxDEV","_jsxDEV","App","_s","yearlyInvestmentData","setYearlyInvestmentData","isDataAvailable","tab","calculateInvestmentHandler","investmentData","yearlyContribution","expectedReturn","duration","currentSavings","investedCapital","initialInvestment","totalInterest","i","yearlyInterest","push","id","Math","random","toString","year","savingsEndOfYear","formResetHandler","length","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateInvestment","resetForm","_c","$RefreshReg$"],"sources":["C:/Users/Hubi/Documents/GitHub/React-course/Exercises/01-starting-project/src/App.js"],"sourcesContent":["import {useState} from 'react';\nimport Header from './components/UI/Header';\nimport InvestmentForm from './components/InvestmentForm';\nimport InvestmentResultTable from './components/InvestmentResultTable';\n\nfunction App() {\n  const [yearlyInvestmentData, setYearlyInvestmentData] = useState([]);\n   let isDataAvailable;\n   const tab =[];\n\n\n  const calculateInvestmentHandler = (investmentData) => {\n      \n       const {yearlyContribution, expectedReturn, duration} = investmentData;\n       let {currentSavings} = investmentData,\n       \n       investedCapital = currentSavings,\n       initialInvestment = currentSavings,\n       totalInterest = 0;\n\n       for (let i = 0; i < duration; i++) {\n         const yearlyInterest = currentSavings * (expectedReturn / 100);\n         investedCapital+=yearlyContribution;\n         currentSavings += yearlyInterest + yearlyContribution;\n         totalInterest += yearlyInterest;\n         \n         \n\n        \n\n        tab.push({\n          id:Math.random().toString(),\n          year: i + 1,\n          yearlyInterest: yearlyInterest,\n          savingsEndOfYear: currentSavings,\n          yearlyContribution: yearlyContribution,\n          totalInterest: totalInterest,\n          investedCapital:investedCapital,\n          initialInvestment: initialInvestment,\n        })\n\n            //   setYearlyInvestmentData((data) => [...data,\n            //     {\n            //       year: i + 1,\n            //       yearlyInterest: yearlyInterest,\n            //       savingsEndOfYear: currentSavings,\n            //       yearlyContribution: yearlyContribution,\n            //       totalInterest: totalInterest,\n            //     }\n            // ]);\n    }\n    setYearlyInvestmentData([...tab]);\n  }\n\n  const formResetHandler = () => {\n    setYearlyInvestmentData([]);\n  }\n\n  yearlyInvestmentData.length === 0 ? isDataAvailable = false : isDataAvailable = true;\n\n  return (\n    <div>\n     <Header />\n\n      <InvestmentForm calculateInvestment={calculateInvestmentHandler} resetForm={formResetHandler}/>\n\n      {isDataAvailable && <InvestmentResultTable investmentData={yearlyInvestmentData} />}\n      {!isDataAvailable && <h2>No data found.</h2>}\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,qBAAqB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACnE,IAAIU,eAAe;EACnB,MAAMC,GAAG,GAAE,EAAE;EAGd,MAAMC,0BAA0B,GAAIC,cAAc,IAAK;IAElD,MAAM;MAACC,kBAAkB;MAAEC,cAAc;MAAEC;IAAQ,CAAC,GAAGH,cAAc;IACrE,IAAI;QAACI;MAAc,CAAC,GAAGJ,cAAc;MAErCK,eAAe,GAAGD,cAAc;MAChCE,iBAAiB,GAAGF,cAAc;MAClCG,aAAa,GAAG,CAAC;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,EAAEK,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,IAAIF,cAAc,GAAG,GAAG,CAAC;MAC9DG,eAAe,IAAEJ,kBAAkB;MACnCG,cAAc,IAAIK,cAAc,GAAGR,kBAAkB;MACrDM,aAAa,IAAIE,cAAc;MAMhCX,GAAG,CAACY,IAAI,CAAC;QACPC,EAAE,EAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QAC3BC,IAAI,EAAEP,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BO,gBAAgB,EAAEZ,cAAc;QAChCH,kBAAkB,EAAEA,kBAAkB;QACtCM,aAAa,EAAEA,aAAa;QAC5BF,eAAe,EAACA,eAAe;QAC/BC,iBAAiB,EAAEA;MACrB,CAAC,CAAC;;MAEE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACR;;IACAV,uBAAuB,CAAC,CAAC,GAAGE,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,MAAMmB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrB,uBAAuB,CAAC,EAAE,CAAC;EAC7B,CAAC;EAEDD,oBAAoB,CAACuB,MAAM,KAAK,CAAC,GAAGrB,eAAe,GAAG,KAAK,GAAGA,eAAe,GAAG,IAAI;EAEpF,oBACEL,OAAA;IAAA2B,QAAA,gBACC3B,OAAA,CAACJ,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAET/B,OAAA,CAACH,cAAc;MAACmC,mBAAmB,EAAEzB,0BAA2B;MAAC0B,SAAS,EAAER;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE9F1B,eAAe,iBAAIL,OAAA,CAACF,qBAAqB;MAACU,cAAc,EAAEL;IAAqB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClF,CAAC1B,eAAe,iBAAIL,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMzC,CAAC;AAEV;AAAC7B,EAAA,CAtEQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAwEZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}