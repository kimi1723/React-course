{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hubi\\\\Documents\\\\GitHub\\\\React-course\\\\Exercises\\\\01-starting-project\\\\src\\\\components\\\\InvestmentResultTable.js\";\nimport { useState } from 'react';\nimport styles from './InvestmentResultsTable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InvestmentResultTable = userInput => {\n  const yearlyData = []; // per-year results\n\n  let currentSavings = +userInput['current-savings'];\n  const yearlyContribution = +userInput['yearly-contribution'];\n  const expectedReturn = +userInput['expected-return'] / 100;\n  const duration = +userInput['duration'];\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: styles.result,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"YEAR NUMBER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"TOTAL SAVINGS END OF YEAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"INTEREST GAINED IN YEAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"TOTAL INTEREST GAINED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"TOTAL INVESTED CAPITAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 14\n  }, this);\n};\n_c = InvestmentResultTable;\nexport default InvestmentResultTable;\nvar _c;\n$RefreshReg$(_c, \"InvestmentResultTable\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","InvestmentResultTable","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","className","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hubi/Documents/GitHub/React-course/Exercises/01-starting-project/src/components/InvestmentResultTable.js"],"sourcesContent":["import {useState} from 'react';\r\nimport styles from './InvestmentResultsTable.module.css';\r\n\r\nconst InvestmentResultTable = (userInput) => {\r\n  const yearlyData = []; // per-year results\r\n  \r\n  let currentSavings = +userInput['current-savings'];\r\n        const yearlyContribution = +userInput['yearly-contribution']; \r\n        const expectedReturn = +userInput['expected-return'] / 100;\r\n        const duration = +userInput['duration'];\r\n\r\n        // The below code calculates yearly results (total savings, interest etc)\r\n        for (let i = 0; i < duration; i++) {\r\n        const yearlyInterest = currentSavings * expectedReturn;\r\n        currentSavings += yearlyInterest + yearlyContribution;\r\n        yearlyData.push({\r\n            // feel free to change the shape of the data pushed to the array!\r\n            year: i + 1,\r\n            yearlyInterest: yearlyInterest,\r\n            savingsEndOfYear: currentSavings,\r\n            yearlyContribution: yearlyContribution,\r\n        });\r\n        }\r\n\r\n    return   <table className={styles.result}>\r\n                  <thead>\r\n                      <tr>\r\n                        <th>Year</th>\r\n                        <th>Total Savings</th>\r\n                        <th>Interest (Year)</th>\r\n                        <th>Total Interest</th>\r\n                        <th>Invested Capital</th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      <tr>\r\n                        <td>YEAR NUMBER</td>\r\n                        <td>TOTAL SAVINGS END OF YEAR</td>\r\n                        <td>INTEREST GAINED IN YEAR</td>\r\n                        <td>TOTAL INTEREST GAINED</td>\r\n                        <td>TOTAL INVESTED CAPITAL</td>\r\n                      </tr>\r\n                  </tbody>\r\n             </table>\r\n}\r\n\r\nexport default InvestmentResultTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}