{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hubi\\\\Documents\\\\GitHub\\\\React-course\\\\Exercises\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/UI/Header';\nimport InvestmentForm from './components/InvestmentForm';\nimport InvestmentResultTable from './components/InvestmentResultTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyInvestmentData, setYearlyInvestmentData] = useState([{\n    year: 0,\n    yearlyInterest: 0,\n    savingsEndOfYear: 0,\n    yearlyContribution: 0\n  }]);\n  const calculateInvestmentHandler = investmentData => {\n    const {\n      yearlyContribution,\n      expectedReturn,\n      duration\n    } = investmentData;\n    let {\n      currentSavings\n    } = investmentData;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * (expectedReturn / 100);\n      currentSavings += yearlyInterest + yearlyContribution;\n      setYearlyInvestmentData(data => [...data, {\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentForm, {\n      calculateInvestment: calculateInvestmentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentResultTable, {\n      investmentData: yearlyInvestmentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A0iKGHEL59SWFizyyfIYQHyK1y4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","InvestmentForm","InvestmentResultTable","jsxDEV","_jsxDEV","App","_s","yearlyInvestmentData","setYearlyInvestmentData","year","yearlyInterest","savingsEndOfYear","yearlyContribution","calculateInvestmentHandler","investmentData","expectedReturn","duration","currentSavings","i","data","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateInvestment","_c","$RefreshReg$"],"sources":["C:/Users/Hubi/Documents/GitHub/React-course/Exercises/01-starting-project/src/App.js"],"sourcesContent":["import {useState} from 'react';\nimport Header from './components/UI/Header';\nimport InvestmentForm from './components/InvestmentForm';\nimport InvestmentResultTable from './components/InvestmentResultTable';\n\nfunction App() {\n  const [yearlyInvestmentData, setYearlyInvestmentData] = useState([ \n    {\n          year: 0,\n          yearlyInterest: 0,\n          savingsEndOfYear: 0,\n          yearlyContribution: 0,\n    }\n  ]);\n\n  const calculateInvestmentHandler = (investmentData) => {\n       const {yearlyContribution, expectedReturn, duration} = investmentData;\n       let {currentSavings} = investmentData;\n       \n       for (let i = 0; i < duration; i++) {\n         const yearlyInterest = currentSavings * (expectedReturn / 100);\n         currentSavings += yearlyInterest + yearlyContribution;\n\n              setYearlyInvestmentData(data => [\n                ...data,\n                {\n                  year: i + 1,\n                  yearlyInterest: yearlyInterest,\n                  savingsEndOfYear: currentSavings,\n                  yearlyContribution: yearlyContribution,\n                }\n            ]);\n    }\n  }\n\n  return (\n    <div>\n     <Header />\n\n      <InvestmentForm calculateInvestment={calculateInvestmentHandler}/>\n\n      <InvestmentResultTable investmentData={yearlyInvestmentData}/>\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,qBAAqB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,CAC/D;IACMU,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,CAAC;IACjBC,gBAAgB,EAAE,CAAC;IACnBC,kBAAkB,EAAE;EAC1B,CAAC,CACF,CAAC;EAEF,MAAMC,0BAA0B,GAAIC,cAAc,IAAK;IAClD,MAAM;MAACF,kBAAkB;MAAEG,cAAc;MAAEC;IAAQ,CAAC,GAAGF,cAAc;IACrE,IAAI;MAACG;IAAc,CAAC,GAAGH,cAAc;IAErC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MACjC,MAAMR,cAAc,GAAGO,cAAc,IAAIF,cAAc,GAAG,GAAG,CAAC;MAC9DE,cAAc,IAAIP,cAAc,GAAGE,kBAAkB;MAEhDJ,uBAAuB,CAACW,IAAI,IAAI,CAC9B,GAAGA,IAAI,EACP;QACEV,IAAI,EAAES,CAAC,GAAG,CAAC;QACXR,cAAc,EAAEA,cAAc;QAC9BC,gBAAgB,EAAEM,cAAc;QAChCL,kBAAkB,EAAEA;MACtB,CAAC,CACJ,CAAC;IACV;EACF,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACChB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAETpB,OAAA,CAACH,cAAc;MAACwB,mBAAmB,EAAEZ;IAA2B;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAElEpB,OAAA,CAACF,qBAAqB;MAACY,cAAc,EAAEP;IAAqB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAM3D,CAAC;AAEV;AAAClB,EAAA,CA5CQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}